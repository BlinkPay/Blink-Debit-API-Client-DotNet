/*
 * Blink Debit (PayNow and AutoPay) Payments API
 *
 * APIs to execute Direct Credit payments for customers who use online banking with supported banks.  These APIs power **Blink PayNow** enabling one-off payments, and **Blink AutoPay** enabling recurring payments.  **Request IDs** Request IDs are included in the header in every response, to assist in tracing and debugging.  **API Change Policy** Additive changes may be made to request query parameters and JSON responses. To preserve backward compatibility, endpoint naming updates or JSON elements that already exist will not be removed or renamed until a major version (URL) change. This policy applies only after the official v1 release.
 *
 * The version of the OpenAPI document: 1.0.19
 * Contact: sysadmin@blinkpay.co.nz
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using BlinkDebitApiClient.Client;
using BlinkDebitApiClient.Api.V1;
// uncomment below to import models
//using BlinkDebitApiClient.Model.V1;

namespace BlinkDebitApiClient.Test.Api.V1
{
    /// <summary>
    ///  Class for testing PaymentsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PaymentsApiTests : IDisposable
    {
        private PaymentsApi instance;

        public PaymentsApiTests()
        {
            instance = new PaymentsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PaymentsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' PaymentsApi
            //Assert.IsType<PaymentsApi>(instance);
        }

        /// <summary>
        /// Test CreatePayment
        /// </summary>
        [Fact]
        public void CreatePaymentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? requestId = null;
            //Guid? xCorrelationId = null;
            //Guid? idempotencyKey = null;
            //PaymentRequest? paymentRequest = null;
            //var response = instance.CreatePayment(requestId, xCorrelationId, idempotencyKey, paymentRequest);
            //Assert.IsType<PaymentResponse>(response);
        }

        /// <summary>
        /// Test GetPayment
        /// </summary>
        [Fact]
        public void GetPaymentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid paymentId = null;
            //Guid? requestId = null;
            //Guid? xCorrelationId = null;
            //var response = instance.GetPayment(paymentId, requestId, xCorrelationId);
            //Assert.IsType<Payment>(response);
        }
    }
}
